apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "klab-todo.fullname" . }}
  labels: {{- include "klab-todo.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "klab-todo.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "klab-todo.selectorLabels" . | nindent 8 }}
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                 - key: kubernetes.io/hostname
                   operator: In
                   values:
{{- if .Values.affinityNodes -}}                    
                   {{- range .Values.affinityNodes }}
                     - {{ . }}
                   {{- end }}
{{else}}
                     - {{ default "minikube" }}
{{end}}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          {{- if .Values.livenessProbe.enabled }}    
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: http
            initialDelaySeconds: {{ default 60 .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ default 30 .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ default 10 .Values.livenessProbe.timeoutSeconds }}
            successThreshold: {{ default 1 .Values.livenessProbe.successThreshold }}
            failureThreshold: {{ default 3 .Values.livenessProbe.failureThreshold }}
          {{end}}  
          env:
            - name: MYSQL_HOST
              valueFrom:
                configMapKeyRef:
                  key: url
                  name: {{ default "mysql" .Values.mysqlRef }}-config
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  key: username
                  name: {{ default "mysql" .Values.mysqlRef }}-secret
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: {{ default "mysql" .Values.mysqlRef }}-secret
            - name: MYSQL_DB_NAME
              valueFrom:
                configMapKeyRef:
                  key: database
                  name: {{ default "mysql" .Values.mysqlRef }}-config    
            - name: BASIC_AUTH_USER
              valueFrom:
                secretKeyRef:
                  key: basic-auth-username
                  name: {{ include "klab-todo.fullname" . }}-secret
            - name: BASIC_AUTH_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: basic-auth-password
                  name: {{ include "klab-todo.fullname" . }}-secret
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      initContainers:
        - name: init-mysql-wait
          image: {{ .Values.initContainers.dbWait.image }}:{{ .Values.initContainers.dbWait.tag }}
          imagePullPolicy: {{ .Values.initContainers.dbWait.imagePullPolicy }}
          command: ['sh', '-c', 'until nslookup mysql; do echo waiting for {{ default "mysql" .Values.mysqlRef }}; sleep 2; done;']      